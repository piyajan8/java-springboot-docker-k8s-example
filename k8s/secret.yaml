apiVersion: v1
kind: Secret
metadata:
  name: app-secrets
  labels:
    app: java-springboot-app
type: Opaque
data:
  # Example sensitive configuration (base64 encoded)
  # To encode: echo -n "your-secret-value" | base64
  
  # Database password (example - replace with actual base64 encoded value)
  # database.password: cGFzc3dvcmQxMjM=
  
  # API keys (example - replace with actual base64 encoded values)
  # external.api.key: YWJjZGVmZ2hpams=
  
  # JWT secret (example - replace with actual base64 encoded value)
  # jwt.secret: bXlzZWNyZXRqd3RrZXk=

---
# Image pull secret for private container registries
# This secret is used to authenticate with private Docker registries
apiVersion: v1
kind: Secret
metadata:
  name: registry-secret
  labels:
    app: java-springboot-app
type: kubernetes.io/dockerconfigjson
data:
  # Docker registry credentials (base64 encoded)
  # 
  # To create this secret with kubectl:
  # kubectl create secret docker-registry registry-secret \
  #   --docker-server=<your-registry-server> \
  #   --docker-username=<your-username> \
  #   --docker-password=<your-password> \
  #   --docker-email=<your-email>
  #
  # For different registry types:
  # 
  # Docker Hub:
  #   --docker-server=docker.io
  # 
  # Google Container Registry:
  #   --docker-server=gcr.io
  #   --docker-username=_json_key
  #   --docker-password="$(cat path/to/service-account-key.json)"
  # 
  # Amazon ECR:
  #   --docker-server=<account-id>.dkr.ecr.<region>.amazonaws.com
  #   --docker-username=AWS
  #   --docker-password="$(aws ecr get-login-password --region <region>)"
  # 
  # Azure Container Registry:
  #   --docker-server=<registry-name>.azurecr.io
  #   --docker-username=<service-principal-id>
  #   --docker-password=<service-principal-password>
  #
  # Default empty config (replace with actual credentials)
  .dockerconfigjson: eyJhdXRocyI6e319